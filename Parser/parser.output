State 12 conflicts: 1 shift/reduce
State 30 conflicts: 7 shift/reduce
State 31 conflicts: 1 shift/reduce
State 44 conflicts: 7 shift/reduce, 1 reduce/reduce
State 49 conflicts: 1 shift/reduce
State 71 conflicts: 4 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl
    3         | Decl DeclList

    4 Decl: VarDecl
    5     | FunDecl

    6 FunDecl: TYPE ID OPAR CPAR Block

    7 VarDeclList: VarDecl
    8            | VarDecl VarDeclList

    9 VarDecl: TYPE ID SEMICOLON
   10        | TYPE ID OSB NUMBER CSB SEMICOLON
   11        | TYPE ID
   12        | TYPE ID OSB NUMBER CSB
   13        | TYPE ID OSB CSB SEMICOLON
   14        | TYPE ID Tail

   15 StmtList: Stmt
   16         | Stmt StmtList

   17 Stmt: %empty
   18     | VarDecl
   19     | READ ID SEMICOLON
   20     | WRITE ID SEMICOLON
   21     | WRITELN SEMICOLON
   22     | Expr SEMICOLON
   23     | RETURN MathExpr SEMICOLON
   24     | WHILE OPAR RelExpr CPAR Block

   25 Expr: ID
   26     | WRITE MathExpr
   27     | ID EQ MathExpr

   28 MathExpr: MathExpr BinaryOp MathExpr
   29         | NUMBER
   30         | ID

   31 BinaryOp: PLUS
   32         | MINUS
   33         | MULT
   34         | DIV

   35 RelOp: GTE
   36      | LTE
   37      | GT
   38      | LT
   39      | EQEQ
   40      | NOTEQ

   41 RelExpr: MathExpr RelOp MathExpr
   42        | MathExpr

   43 Tail: OPAR ParamDeclList CPAR Block

   44 Block: OCB VarDeclList StmtList CCB

   45 ParamDeclList: ParamDecl COMMA ParamDeclList
   46              | ParamDecl

   47 ParamDecl: %empty
   48          | TYPE ID
   49          | TYPE ID OSB CSB


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TYPE <string> (258) 6 9 10 11 12 13 14 48 49
    ID <string> (259) 6 9 10 11 12 13 14 19 20 25 27 30 48 49
    SEMICOLON <string> (260) 9 10 13 19 20 21 22 23
    EQ <string> (261) 27
    NUMBER <number> (262) 10 12 29
    PLUS <string> (263) 31
    WRITE <string> (264) 20 26
    WRITELN <string> (265) 21
    MINUS <string> (266) 32
    MULT <string> (267) 33
    DIV <string> (268) 34
    OSB <string> (269) 10 12 13 49
    CSB <string> (270) 10 12 13 49
    OCB <string> (271) 44
    CCB <string> (272) 44
    OPAR <string> (273) 6 24 43
    CPAR <string> (274) 6 24 43
    READ <string> (275) 19
    RETURN <string> (276) 23
    COMMA <string> (277) 45
    GTE <string> (278) 35
    LTE <string> (279) 36
    GT <string> (280) 37
    LT <string> (281) 38
    EQEQ <string> (282) 39
    NOTEQ <string> (283) 40
    WHILE <string> (284) 24


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    Program <ast> (31)
        on left: 1
        on right: 0
    DeclList <ast> (32)
        on left: 2 3
        on right: 1 3
    Decl <ast> (33)
        on left: 4 5
        on right: 2 3
    FunDecl <ast> (34)
        on left: 6
        on right: 5
    VarDeclList <ast> (35)
        on left: 7 8
        on right: 8 44
    VarDecl <ast> (36)
        on left: 9 10 11 12 13 14
        on right: 4 7 8 18
    StmtList <ast> (37)
        on left: 15 16
        on right: 16 44
    Stmt <ast> (38)
        on left: 17 18 19 20 21 22 23 24
        on right: 15 16
    Expr <ast> (39)
        on left: 25 26 27
        on right: 22
    MathExpr <ast> (40)
        on left: 28 29 30
        on right: 23 26 27 28 41 42
    BinaryOp <ast> (41)
        on left: 31 32 33 34
        on right: 28
    RelOp <ast> (42)
        on left: 35 36 37 38 39 40
        on right: 41
    RelExpr <ast> (43)
        on left: 41 42
        on right: 24
    Tail <ast> (44)
        on left: 43
        on right: 14
    Block <ast> (45)
        on left: 44
        on right: 6 24 43
    ParamDeclList <ast> (46)
        on left: 45 46
        on right: 43 45
    ParamDecl <ast> (47)
        on left: 47 48 49
        on right: 45 46


State 0

    0 $accept: . Program $end

    TYPE  shift, and go to state 1

    Program   go to state 2
    DeclList  go to state 3
    Decl      go to state 4
    FunDecl   go to state 5
    VarDecl   go to state 6


State 1

    6 FunDecl: TYPE . ID OPAR CPAR Block
    9 VarDecl: TYPE . ID SEMICOLON
   10        | TYPE . ID OSB NUMBER CSB SEMICOLON
   11        | TYPE . ID
   12        | TYPE . ID OSB NUMBER CSB
   13        | TYPE . ID OSB CSB SEMICOLON
   14        | TYPE . ID Tail

    ID  shift, and go to state 7


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 8


State 3

    1 Program: DeclList .

    $default  reduce using rule 1 (Program)


State 4

    2 DeclList: Decl .
    3         | Decl . DeclList

    TYPE  shift, and go to state 1

    $default  reduce using rule 2 (DeclList)

    DeclList  go to state 9
    Decl      go to state 4
    FunDecl   go to state 5
    VarDecl   go to state 6


State 5

    5 Decl: FunDecl .

    $default  reduce using rule 5 (Decl)


State 6

    4 Decl: VarDecl .

    $default  reduce using rule 4 (Decl)


State 7

    6 FunDecl: TYPE ID . OPAR CPAR Block
    9 VarDecl: TYPE ID . SEMICOLON
   10        | TYPE ID . OSB NUMBER CSB SEMICOLON
   11        | TYPE ID .
   12        | TYPE ID . OSB NUMBER CSB
   13        | TYPE ID . OSB CSB SEMICOLON
   14        | TYPE ID . Tail

    SEMICOLON  shift, and go to state 10
    OSB        shift, and go to state 11
    OPAR       shift, and go to state 12

    $default  reduce using rule 11 (VarDecl)

    Tail  go to state 13


State 8

    0 $accept: Program $end .

    $default  accept


State 9

    3 DeclList: Decl DeclList .

    $default  reduce using rule 3 (DeclList)


State 10

    9 VarDecl: TYPE ID SEMICOLON .

    $default  reduce using rule 9 (VarDecl)


State 11

   10 VarDecl: TYPE ID OSB . NUMBER CSB SEMICOLON
   12        | TYPE ID OSB . NUMBER CSB
   13        | TYPE ID OSB . CSB SEMICOLON

    NUMBER  shift, and go to state 14
    CSB     shift, and go to state 15


State 12

    6 FunDecl: TYPE ID OPAR . CPAR Block
   43 Tail: OPAR . ParamDeclList CPAR Block

    TYPE  shift, and go to state 16
    CPAR  shift, and go to state 17

    CPAR      [reduce using rule 47 (ParamDecl)]
    $default  reduce using rule 47 (ParamDecl)

    ParamDeclList  go to state 18
    ParamDecl      go to state 19


State 13

   14 VarDecl: TYPE ID Tail .

    $default  reduce using rule 14 (VarDecl)


State 14

   10 VarDecl: TYPE ID OSB NUMBER . CSB SEMICOLON
   12        | TYPE ID OSB NUMBER . CSB

    CSB  shift, and go to state 20


State 15

   13 VarDecl: TYPE ID OSB CSB . SEMICOLON

    SEMICOLON  shift, and go to state 21


State 16

   48 ParamDecl: TYPE . ID
   49          | TYPE . ID OSB CSB

    ID  shift, and go to state 22


State 17

    6 FunDecl: TYPE ID OPAR CPAR . Block

    OCB  shift, and go to state 23

    Block  go to state 24


State 18

   43 Tail: OPAR ParamDeclList . CPAR Block

    CPAR  shift, and go to state 25


State 19

   45 ParamDeclList: ParamDecl . COMMA ParamDeclList
   46              | ParamDecl .

    COMMA  shift, and go to state 26

    $default  reduce using rule 46 (ParamDeclList)


State 20

   10 VarDecl: TYPE ID OSB NUMBER CSB . SEMICOLON
   12        | TYPE ID OSB NUMBER CSB .

    SEMICOLON  shift, and go to state 27

    $default  reduce using rule 12 (VarDecl)


State 21

   13 VarDecl: TYPE ID OSB CSB SEMICOLON .

    $default  reduce using rule 13 (VarDecl)


State 22

   48 ParamDecl: TYPE ID .
   49          | TYPE ID . OSB CSB

    OSB  shift, and go to state 28

    $default  reduce using rule 48 (ParamDecl)


State 23

   44 Block: OCB . VarDeclList StmtList CCB

    TYPE  shift, and go to state 29

    VarDeclList  go to state 30
    VarDecl      go to state 31


State 24

    6 FunDecl: TYPE ID OPAR CPAR Block .

    $default  reduce using rule 6 (FunDecl)


State 25

   43 Tail: OPAR ParamDeclList CPAR . Block

    OCB  shift, and go to state 23

    Block  go to state 32


State 26

   45 ParamDeclList: ParamDecl COMMA . ParamDeclList

    TYPE  shift, and go to state 16

    $default  reduce using rule 47 (ParamDecl)

    ParamDeclList  go to state 33
    ParamDecl      go to state 19


State 27

   10 VarDecl: TYPE ID OSB NUMBER CSB SEMICOLON .

    $default  reduce using rule 10 (VarDecl)


State 28

   49 ParamDecl: TYPE ID OSB . CSB

    CSB  shift, and go to state 34


State 29

    9 VarDecl: TYPE . ID SEMICOLON
   10        | TYPE . ID OSB NUMBER CSB SEMICOLON
   11        | TYPE . ID
   12        | TYPE . ID OSB NUMBER CSB
   13        | TYPE . ID OSB CSB SEMICOLON
   14        | TYPE . ID Tail

    ID  shift, and go to state 35


State 30

   44 Block: OCB VarDeclList . StmtList CCB

    TYPE     shift, and go to state 29
    ID       shift, and go to state 36
    WRITE    shift, and go to state 37
    WRITELN  shift, and go to state 38
    READ     shift, and go to state 39
    RETURN   shift, and go to state 40
    WHILE    shift, and go to state 41

    TYPE      [reduce using rule 17 (Stmt)]
    ID        [reduce using rule 17 (Stmt)]
    WRITE     [reduce using rule 17 (Stmt)]
    WRITELN   [reduce using rule 17 (Stmt)]
    READ      [reduce using rule 17 (Stmt)]
    RETURN    [reduce using rule 17 (Stmt)]
    WHILE     [reduce using rule 17 (Stmt)]
    $default  reduce using rule 17 (Stmt)

    VarDecl   go to state 42
    StmtList  go to state 43
    Stmt      go to state 44
    Expr      go to state 45


State 31

    7 VarDeclList: VarDecl .
    8            | VarDecl . VarDeclList

    TYPE  shift, and go to state 29

    TYPE      [reduce using rule 7 (VarDeclList)]
    $default  reduce using rule 7 (VarDeclList)

    VarDeclList  go to state 46
    VarDecl      go to state 31


State 32

   43 Tail: OPAR ParamDeclList CPAR Block .

    $default  reduce using rule 43 (Tail)


State 33

   45 ParamDeclList: ParamDecl COMMA ParamDeclList .

    $default  reduce using rule 45 (ParamDeclList)


State 34

   49 ParamDecl: TYPE ID OSB CSB .

    $default  reduce using rule 49 (ParamDecl)


State 35

    9 VarDecl: TYPE ID . SEMICOLON
   10        | TYPE ID . OSB NUMBER CSB SEMICOLON
   11        | TYPE ID .
   12        | TYPE ID . OSB NUMBER CSB
   13        | TYPE ID . OSB CSB SEMICOLON
   14        | TYPE ID . Tail

    SEMICOLON  shift, and go to state 10
    OSB        shift, and go to state 11
    OPAR       shift, and go to state 47

    $default  reduce using rule 11 (VarDecl)

    Tail  go to state 13


State 36

   25 Expr: ID .
   27     | ID . EQ MathExpr

    EQ  shift, and go to state 48

    $default  reduce using rule 25 (Expr)


State 37

   20 Stmt: WRITE . ID SEMICOLON
   26 Expr: WRITE . MathExpr

    ID      shift, and go to state 49
    NUMBER  shift, and go to state 50

    MathExpr  go to state 51


State 38

   21 Stmt: WRITELN . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 39

   19 Stmt: READ . ID SEMICOLON

    ID  shift, and go to state 53


State 40

   23 Stmt: RETURN . MathExpr SEMICOLON

    ID      shift, and go to state 54
    NUMBER  shift, and go to state 50

    MathExpr  go to state 55


State 41

   24 Stmt: WHILE . OPAR RelExpr CPAR Block

    OPAR  shift, and go to state 56


State 42

   18 Stmt: VarDecl .

    $default  reduce using rule 18 (Stmt)


State 43

   44 Block: OCB VarDeclList StmtList . CCB

    CCB  shift, and go to state 57


State 44

   15 StmtList: Stmt .
   16         | Stmt . StmtList

    TYPE     shift, and go to state 29
    ID       shift, and go to state 36
    WRITE    shift, and go to state 37
    WRITELN  shift, and go to state 38
    READ     shift, and go to state 39
    RETURN   shift, and go to state 40
    WHILE    shift, and go to state 41

    TYPE      [reduce using rule 17 (Stmt)]
    ID        [reduce using rule 17 (Stmt)]
    WRITE     [reduce using rule 17 (Stmt)]
    WRITELN   [reduce using rule 17 (Stmt)]
    CCB       reduce using rule 15 (StmtList)
    CCB       [reduce using rule 17 (Stmt)]
    READ      [reduce using rule 17 (Stmt)]
    RETURN    [reduce using rule 17 (Stmt)]
    WHILE     [reduce using rule 17 (Stmt)]
    $default  reduce using rule 15 (StmtList)

    VarDecl   go to state 42
    StmtList  go to state 58
    Stmt      go to state 44
    Expr      go to state 45


State 45

   22 Stmt: Expr . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 46

    8 VarDeclList: VarDecl VarDeclList .

    $default  reduce using rule 8 (VarDeclList)


State 47

   43 Tail: OPAR . ParamDeclList CPAR Block

    TYPE  shift, and go to state 16

    $default  reduce using rule 47 (ParamDecl)

    ParamDeclList  go to state 18
    ParamDecl      go to state 19


State 48

   27 Expr: ID EQ . MathExpr

    ID      shift, and go to state 54
    NUMBER  shift, and go to state 50

    MathExpr  go to state 60


State 49

   20 Stmt: WRITE ID . SEMICOLON
   30 MathExpr: ID .

    SEMICOLON  shift, and go to state 61

    SEMICOLON  [reduce using rule 30 (MathExpr)]
    $default   reduce using rule 30 (MathExpr)


State 50

   29 MathExpr: NUMBER .

    $default  reduce using rule 29 (MathExpr)


State 51

   26 Expr: WRITE MathExpr .
   28 MathExpr: MathExpr . BinaryOp MathExpr

    PLUS   shift, and go to state 62
    MINUS  shift, and go to state 63
    MULT   shift, and go to state 64
    DIV    shift, and go to state 65

    $default  reduce using rule 26 (Expr)

    BinaryOp  go to state 66


State 52

   21 Stmt: WRITELN SEMICOLON .

    $default  reduce using rule 21 (Stmt)


State 53

   19 Stmt: READ ID . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 54

   30 MathExpr: ID .

    $default  reduce using rule 30 (MathExpr)


State 55

   23 Stmt: RETURN MathExpr . SEMICOLON
   28 MathExpr: MathExpr . BinaryOp MathExpr

    SEMICOLON  shift, and go to state 68
    PLUS       shift, and go to state 62
    MINUS      shift, and go to state 63
    MULT       shift, and go to state 64
    DIV        shift, and go to state 65

    BinaryOp  go to state 66


State 56

   24 Stmt: WHILE OPAR . RelExpr CPAR Block

    ID      shift, and go to state 54
    NUMBER  shift, and go to state 50

    MathExpr  go to state 69
    RelExpr   go to state 70


State 57

   44 Block: OCB VarDeclList StmtList CCB .

    $default  reduce using rule 44 (Block)


State 58

   16 StmtList: Stmt StmtList .

    $default  reduce using rule 16 (StmtList)


State 59

   22 Stmt: Expr SEMICOLON .

    $default  reduce using rule 22 (Stmt)


State 60

   27 Expr: ID EQ MathExpr .
   28 MathExpr: MathExpr . BinaryOp MathExpr

    PLUS   shift, and go to state 62
    MINUS  shift, and go to state 63
    MULT   shift, and go to state 64
    DIV    shift, and go to state 65

    $default  reduce using rule 27 (Expr)

    BinaryOp  go to state 66


State 61

   20 Stmt: WRITE ID SEMICOLON .

    $default  reduce using rule 20 (Stmt)


State 62

   31 BinaryOp: PLUS .

    $default  reduce using rule 31 (BinaryOp)


State 63

   32 BinaryOp: MINUS .

    $default  reduce using rule 32 (BinaryOp)


State 64

   33 BinaryOp: MULT .

    $default  reduce using rule 33 (BinaryOp)


State 65

   34 BinaryOp: DIV .

    $default  reduce using rule 34 (BinaryOp)


State 66

   28 MathExpr: MathExpr BinaryOp . MathExpr

    ID      shift, and go to state 54
    NUMBER  shift, and go to state 50

    MathExpr  go to state 71


State 67

   19 Stmt: READ ID SEMICOLON .

    $default  reduce using rule 19 (Stmt)


State 68

   23 Stmt: RETURN MathExpr SEMICOLON .

    $default  reduce using rule 23 (Stmt)


State 69

   28 MathExpr: MathExpr . BinaryOp MathExpr
   41 RelExpr: MathExpr . RelOp MathExpr
   42        | MathExpr .

    PLUS   shift, and go to state 62
    MINUS  shift, and go to state 63
    MULT   shift, and go to state 64
    DIV    shift, and go to state 65
    GTE    shift, and go to state 72
    LTE    shift, and go to state 73
    GT     shift, and go to state 74
    LT     shift, and go to state 75
    EQEQ   shift, and go to state 76
    NOTEQ  shift, and go to state 77

    $default  reduce using rule 42 (RelExpr)

    BinaryOp  go to state 66
    RelOp     go to state 78


State 70

   24 Stmt: WHILE OPAR RelExpr . CPAR Block

    CPAR  shift, and go to state 79


State 71

   28 MathExpr: MathExpr . BinaryOp MathExpr
   28         | MathExpr BinaryOp MathExpr .

    PLUS   shift, and go to state 62
    MINUS  shift, and go to state 63
    MULT   shift, and go to state 64
    DIV    shift, and go to state 65

    PLUS      [reduce using rule 28 (MathExpr)]
    MINUS     [reduce using rule 28 (MathExpr)]
    MULT      [reduce using rule 28 (MathExpr)]
    DIV       [reduce using rule 28 (MathExpr)]
    $default  reduce using rule 28 (MathExpr)

    BinaryOp  go to state 66


State 72

   35 RelOp: GTE .

    $default  reduce using rule 35 (RelOp)


State 73

   36 RelOp: LTE .

    $default  reduce using rule 36 (RelOp)


State 74

   37 RelOp: GT .

    $default  reduce using rule 37 (RelOp)


State 75

   38 RelOp: LT .

    $default  reduce using rule 38 (RelOp)


State 76

   39 RelOp: EQEQ .

    $default  reduce using rule 39 (RelOp)


State 77

   40 RelOp: NOTEQ .

    $default  reduce using rule 40 (RelOp)


State 78

   41 RelExpr: MathExpr RelOp . MathExpr

    ID      shift, and go to state 54
    NUMBER  shift, and go to state 50

    MathExpr  go to state 80


State 79

   24 Stmt: WHILE OPAR RelExpr CPAR . Block

    OCB  shift, and go to state 23

    Block  go to state 81


State 80

   28 MathExpr: MathExpr . BinaryOp MathExpr
   41 RelExpr: MathExpr RelOp MathExpr .

    PLUS   shift, and go to state 62
    MINUS  shift, and go to state 63
    MULT   shift, and go to state 64
    DIV    shift, and go to state 65

    $default  reduce using rule 41 (RelExpr)

    BinaryOp  go to state 66


State 81

   24 Stmt: WHILE OPAR RelExpr CPAR Block .

    $default  reduce using rule 24 (Stmt)
